# 1. 당신이 왜 이렇게 바꾸었는지에 먼저 주목하라.
# 2. 바꾸기 전에 무엇을 했는지 (그리고 무엇이 잘못 동작했는지),
# 3. 지금은 어떻게 동작하는지,
# 4. 그리고 왜 당신이 그렇게 바꾸기로 했는지 적어라

################
# 꼬릿말(footer)을 아랫줄에 작성 (관련된 이슈 번호 등 추가)

################
# Fix : 버그 수정
# Design           : Css 등 사용자 UI 디자인 변경
# Feature          : 새로운 기능 추가
# !BREAKING CHANGE : 커다란 API 변경의 경우
# !HOTFIX          : 급하게 치명적인 버그를 고쳐야 하는 경우
# Style            : 코드 포멧 변경, 세미 콜론 누락, 코드 수정이 없는 경우
# Refactor         : 코드 리팩토링
# Comment          : 필요한 주석 추가 및 변경 Docs 문서를 수정한 경우
# Test             : 테스트 코드 추가
# Chore            : 빌드 태스트 업데이트, 패키지 매니저를 설정하는 경우 (프로덕션 코드 변경 X)
# Rename           : 파일 혹은 폴더명을 수정하거나 옮기는 작업만인 경우
# Remove           : 파일을 삭제하는 작업만 수행한 경우
################